import os
import time

from api_client import get_bot_texts


time.sleep(5)
_current_bot_texts = {list(item.keys())[0]: list(item.values())[0] for item in get_bot_texts(os.getenv('BOT_TOKEN'))}


def _t(key: str, default: str, **params) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏–∑ _current_bot_texts –ø–æ –∫–ª—é—á—É —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º —Ñ–æ–ª–±–µ–∫–æ–º.

    –û–∂–∏–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É: { key: { 'unformatted_text': '...' } }
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ str.format(**params).
    """
    try:
        source = _current_bot_texts or {}
        # –ï—Å–ª–∏ –≤–¥—Ä—É–≥ —ç—Ç–æ –∫–æ—Ä—É—Ç–∏–Ω–∞/–Ω–µ-—Å–ª–æ–≤–∞—Ä—å ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º default
        if not isinstance(source, dict):
            raise TypeError("texts source is not a dict")
        raw = source.get(key) or {}
        text = raw.get('unformatted_text') if isinstance(raw, dict) else None
        text = text or default
    except Exception:
        text = default
    try:
        return text.format(**params) if params else text
    except Exception:
        # –ù–∞ —Å–ª—É—á–∞–π –Ω–µ—Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤
        return text


def plural_points(n: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞ '–±–∞–ª–ª'"""
    n = abs(int(n))
    if n % 10 == 1 and n % 100 != 11:
        return '–±–∞–ª–ª'
    if 2 <= n % 10 <= 4 and not (12 <= n % 100 <= 14):
        return '–±–∞–ª–ª–∞'
    return '–±–∞–ª–ª–æ–≤'


class TextStatics:

    @staticmethod
    def get_single_game_answer(right_answers: int, wrong_answers: int) -> str:
        xp = right_answers
        default = (
            "üèÅ –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É ‚Äî —ç—Ç–æ –±—ã–ª–æ –º–æ—â–Ω–æ! ‚ö°\n\n"
            "üèÜ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—É–Ω–¥–∞:\n"
            "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {right_answers}\n"
            "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö: {wrong_answers}\n"
            "‚≠ê –ë–∞–ª–ª—ã: {xp} –±–∞–ª–ª–æ–≤\n\n"
            "üëá –ß—Ç–æ –¥–∞–ª—å—à–µ?\n\n"
            "üéÆ –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /quiz"
        )
        return _t(
            'single_game_answer',
            default,
            right_answers=right_answers,
            wrong_answers=wrong_answers,
            xp=xp,
        )

    @staticmethod
    def get_start_menu() -> str:
        default = (
            "üéÆ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏–≥—Ä—ã:\n\n"
            "ü§ñ –°–æ–ª–æ - –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –∏–≥—Ä–∞ —Å –±–æ—Ç–æ–º, –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"
        )
        return _t('start_menu', default)

    @staticmethod
    def get_solo_start_text(name: str, amount: int) -> str:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–¥–∏–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–æ–ª–æ-–∏–≥—Ä—ã: –ø—Ä–∞–≤–∏–ª–∞ –∏ –≤–≤–æ–¥–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
        """
        default = (
            "–ü—Ä–∞–≤–∏–ª–∞ –æ–¥–∏–Ω–æ—á–Ω–æ–π –∏–≥—Ä—ã:\n"
            "1. –£ –≤–∞—Å –µ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å.\n"
            "2. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å –¥–æ –∫–æ–Ω—Ü–∞ —Ç–∞–π–º–µ—Ä–∞, –∏–Ω–∞—á–µ –æ–Ω –∑–∞—Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–µ–≤–µ—Ä–Ω—ã–º.\n"
            "3. –í –∫–æ–Ω—Ü–µ –≤—ã —É–≤–∏–¥–∏—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∏ –Ω–µ–≤–µ—Ä–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.\n\n"
            "–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–æ–ª–æ-–∏–≥—Ä—É ¬´{name}¬ª. –í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {amount}.\n"
            "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É."
        )
        return _t('solo_start_text', default, name=name, amount=amount)

    @staticmethod
    def game_already_running() -> str:
        return _t(
            'game_already_running',
            'üéÆ –í —ç—Ç–æ–º —á–∞—Ç–µ —É–∂–µ –∏–¥–µ—Ç –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞.\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã —Å–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /stop'
        )

    @staticmethod
    def need_create_team_first() -> str:
        default = (
            '–í —ç—Ç–æ–º —á–∞—Ç–µ –ø–æ–∫–∞ –Ω–µ—Ç –∫–æ–º–∞–Ω–¥—ã.\n'
            '–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É –≤ –æ–±—â–µ–π —Ä–µ–π—Ç–∏–Ω–≥–µ –∏ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É!'
        )
        return _t('need_create_team_first', default)

    @staticmethod
    def team_created_success(team_name: str) -> str:
        return _t('team_created_success', '–ö–æ–º–∞–Ω–¥–∞ "{team_name}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n', team_name=team_name)

    @staticmethod
    def team_create_error() -> str:
        return _t('team_create_error', '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã!')

    @staticmethod
    def leaderboard_private_chat_error() -> str:
        default = "–ö–æ–º–∞–Ω–¥–∞ /leaderboard —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö —Å –∫–æ–º–∞–Ω–¥–∞–º–∏."
        return _t('leaderboard_private_chat_error', default)

    @staticmethod
    def leaderboard_api_error() -> str:
        default = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ –∫–æ–º–∞–Ω–¥. –í–æ–∑–º–æ–∂–Ω–æ, –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ —ç—Ç–æ–º —á–∞—Ç–µ."
        return _t('leaderboard_api_error', default)

    @staticmethod
    def leaderboard_message(entries: list, current_team_info: dict = None) -> str:
        """–§–æ—Ä–º–∏—Ä—É–µ—Ç –ø–æ–ª–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞"""
        lines = []
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header_default = "üìà –ö–æ–º–∞–Ω–¥–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ ‚Äî –≤–æ—Ç –∫–∞–∫ —Å–µ–π—á–∞—Å –æ–±—Å—Ç–æ—è—Ç –¥–µ–ª–∞:"
        header = _t('leaderboard_header', header_default)
        lines.append(header)
        lines.append('')
        
        # –¢–æ–ø –∫–æ–º–∞–Ω–¥
        medals = ['ü•á', 'ü•à', 'ü•â']
        for idx, entry in enumerate(entries[:10], start=1):
            team_name = entry.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞')
            team_scores = entry.get('total_scores', 0)
            points_word = plural_points(team_scores)
            
            if idx <= 3:
                emoji = medals[idx-1]
            else:
                emoji = f"{idx}."
            
            entry_default = "{emoji} {team_name} ‚Äî {team_scores} {points_word}"
            entry_text = _t('leaderboard_entry', entry_default, 
                          emoji=emoji, team_name=team_name, team_scores=team_scores, points_word=points_word)
            lines.append(entry_text)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π –∫–æ–º–∞–Ω–¥–µ
        if current_team_info:
            lines.append('')
            team_name = "–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞"
            team_scores = current_team_info.get('total_scores', 0)
            team_rank = current_team_info.get('position', '‚Äî')
            total_teams = current_team_info.get('total', 0)
            points_word = plural_points(team_scores)
            
            current_default = "üîπ {team_name} ‚Äî {team_scores} {points_word} (–º–µ—Å—Ç–æ {team_rank} –∏–∑ {total_teams})"
            current_text = _t('leaderboard_current_team', current_default,
                            team_name=team_name, team_scores=team_scores, points_word=points_word,
                            team_rank=team_rank, total_teams=total_teams)
            lines.append(current_text)
        
        # –ú–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π —Ç–µ–∫—Å—Ç
        lines.append('')
        footer_default = (
            "üî• –ï—â—ë –ø–∞—Ä–∞ —É–¥–∞—á–Ω—ã—Ö –¥–Ω–µ–π ‚Äî –∏ –≤—ã –ø–æ–¥–Ω–∏–º–µ—Ç–µ—Å—å –≤—ã—à–µ!\n"
            "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, —á—Ç–æ–±—ã –∑–∞–Ω–∏–º–∞—Ç—å —Ç–æ–ø–æ–≤—ã–µ –º–µ—Å—Ç–∞ üí™\n\n"
            "üçª –ê –µ—â—ë –ª—É—á—à–µ —Å—ã–≥—Ä–∞—Ç—å –≤–∂–∏–≤—É—é ‚Äî –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –Ω–∞ \"–ö–≤–∏–∑, –ø–ª–∏–∑!\" –≤ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ!\n\n"
            "–ñ–∏–≤–æ–µ –æ–±—â–µ–Ω–∏–µ, —é–º–æ—Ä –∏ –º–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤ ‚Äî –±—É–¥–µ—Ç –∫–ª–∞—Å—Å–Ω–æ! –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–∞–∫ –æ–±—ã—á–Ω–æ –Ω–∞ quizplease.ru"
        )
        footer = _t('leaderboard_footer', footer_default)
        lines.append(footer)
        
        return '\n'.join(lines)

    @staticmethod
    def outdated_question() -> str:
        return _t('outdated_question', '–≠—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å —É–∂–µ –Ω–µ–∞–∫—Ç—É–∞–ª–µ–Ω!')

    @staticmethod
    def no_players_cannot_start() -> str:
        return _t('no_players_cannot_start', '–ò–≥—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å—Å—è –±–µ–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!')

    @staticmethod
    def no_teams_cannot_start() -> str:
        return _t('no_teams_cannot_start', '–ò–≥—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å—Å—è –±–µ–∑ –∫–æ–º–∞–Ω–¥!')

    @staticmethod
    def show_right_answer_only(right_answer: str, comment: str | None = None) -> str:
        comment_block = f"\n\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}" if comment else ""
        return _t('show_right_answer_only', '‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {right_answer}{comment_block}', 
                  right_answer=right_answer, comment_block=comment_block)

    @staticmethod
    def correct_inline_hint() -> str:
        return _t('correct_inline_hint', '‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!')

    @staticmethod
    def incorrect_inline_hint() -> str:
        return _t('incorrect_inline_hint', '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!')

    @staticmethod
    def team_quiz_finished_no_scores() -> str:
        return _t('team_quiz_finished_no_scores', 'üèÅ –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É ‚Äî —ç—Ç–æ –±—ã–ª–æ –º–æ—â–Ω–æ! ‚ö°Ô∏è\n\n–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–±—Ä–∞–ª–∞ –æ—á–∫–æ–≤.')

    @staticmethod
    def team_quiz_finished_with_scores(team_name: str, score: int) -> str:
        default = (
            'üèÅ –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É ‚Äî —ç—Ç–æ –±—ã–ª–æ –º–æ—â–Ω–æ! ‚ö°Ô∏è\n\n'
            'üèÜ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—É–Ω–¥–∞:\n'
            'üë• –ö–æ–º–∞–Ω–¥–∞ "{team_name}": {score} –±–∞–ª–ª–æ–≤\n\n'
            'üëá –ß—Ç–æ –¥–∞–ª—å—à–µ?\n\n'
            'üéÆ –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /menu'
        )
        return _t('team_quiz_finished_with_scores', default, team_name=team_name, score=score)

    @staticmethod
    def no_participants_game_finished() -> str:
        return _t('no_participants_game_finished', '–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –ù–∏–∫—Ç–æ –Ω–µ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª.')

    @staticmethod
    def dm_quiz_finished_full(
        sorted_scores: list[tuple[str, int]],
        registered_count: int,
        participants_total_points: int | None = None,
        players_totals: list[tuple[str, int]] | None = None,
    ) -> str:
        if not sorted_scores:
            results = "‚Äî"
            participated = 0
        else:
            result_lines = []
            for idx, (name, score) in enumerate(sorted_scores, start=1):
                prefix = "ü•á" if idx == 1 else ("ü•à" if idx == 2 else ("ü•â" if idx == 3 else "üîπ"))
                handle = f"@{name}"
                result_lines.append(f"{prefix} {idx}. {handle}: {score} –±–∞–ª–ª–æ–≤")
            results = "\n".join(result_lines)
            participated = len(sorted_scores)
        percent = int(round((participated / registered_count) * 100)) if registered_count else 0
        if players_totals:
            totals_sorted = sorted(players_totals, key=lambda x: x[1], reverse=True)
            totals_lines = []
            for idx, (name, total_points) in enumerate(totals_sorted, start=1):
                handle = f"@{name}"
                totals_lines.append(f"{idx}. {handle}: {total_points} –±–∞–ª–ª–æ–≤")
            stats_block = "üìä –û–±—â–∏–µ –±–∞–ª–ª—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:\n" + "\n".join(totals_lines)
        elif participants_total_points is not None:
            stats_block = f"üí∞ –°—É–º–º–∞ –±–∞–ª–ª–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {participants_total_points}"
        else:
            stats_block = f"üë• –£—á–∞—Å—Ç–≤–æ–≤–∞–ª–æ: {participated} –∏–∑ {registered_count} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö ({percent}%)"
        default = (
            "üèÅ –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É ‚Äî —ç—Ç–æ –±—ã–ª–æ –º–æ—â–Ω–æ! ‚ö°Ô∏è\n\n"
            "üèÜ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—É–Ω–¥–∞:\n"
            "{results}\n"
            "üëá –ß—Ç–æ –¥–∞–ª—å—à–µ?\n\n\n"
            "{stats_block}\n"
            "üéÆ –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /quiz"
        )
        return _t('dm_quiz_finished_full', default, results=results, stats_block=stats_block)

    @staticmethod
    def dm_text_wrong_attempt(attempts_remaining: int, right_answer: str, comment: str | None = None) -> str:
        if attempts_remaining == 1:
            return _t('dm_text_wrong_attempt_1', '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç! –û—Å—Ç–∞–ª–∞—Å—å 1 –ø–æ–ø—ã—Ç–∫–∞')
        else:
            comment_block = f"\n\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}" if comment else ""
            return _t(
                'dm_text_wrong_attempt_0',
                '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç! –ü–æ–ø—ã—Ç–æ–∫ –±–æ–ª—å—à–µ –Ω–µ—Ç.\n‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {right_answer}{comment_block}\n\n–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É...',
                right_answer=right_answer,
                comment_block=comment_block
            )

    @staticmethod
    def dm_registration_message(usernames: list[str], seconds_left: int) -> str:
        participants_text = ''
        for i, username in enumerate(usernames):
            participants_text += f"{i+1}. @{username}\n"
        default = (
            "üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∏–≥—Ä—É –æ—Ç–∫—Ä—ã—Ç–∞!\n\n"
            "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.\n"
            "‚è≥ –£ —Ç–µ–±—è –µ—Å—Ç—å {seconds_left} —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ –∏–≥—Ä—É! \n\n"
            "üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏ ({count}):\n{participants}\n"
            "–ß–µ–º –±–æ–ª—å—à–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ‚Äî —Ç–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ –±–∞—Ç—Ç–ª! üéØ\n"
            "üëá –ñ–º–∏, –µ—Å–ª–∏ –≥–æ—Ç–æ–≤(–∞) —Å—Ä–∞–∂–∞—Ç—å—Å—è –∑–∞ –±–∞–ª–ª—ã –∏ —Å–ª–∞–≤—É! üß†‚ö°Ô∏è"
        )
        return _t(
            'dm_registration_message',
            default,
            count=max(1, len(usernames)),
            participants=participants_text,
            seconds_left=seconds_left,
        )

    @staticmethod
    def dm_select_theme_message() -> str:
        default = (
            "üéØ –ú—ã –Ω–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É...\n\n"
            "–í–ø–µ—Ä–µ–¥–∏ –æ–¥–∏–Ω —Ä–∞—É–Ω–¥ –∏ —à–µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å–æ–≤! –ó–∞ –∫–∞–∂–¥—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ‚Äî +1 –±–∞–ª–ª –≤ –∫–æ–ø–∏–ª–∫—É.\n\n"
            "üëá –ò—Ç–∞–∫, —Ç–µ–º–∞ –¥–ª—è —Ä–∞—É–Ω–¥–∞:"
        )
        return _t('dm_select_theme_message', default)

    @staticmethod
    def theme_selected_start(name: str, amount: int) -> str:
        default = (
            "üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏—è \"{name}\" ‚Äî –ø—Ä–∏–Ω—è–ª!\n"
            "–ë—É–¥–µ—Ç –∂–∞—Ä–∫–æ üî• ‚Äî {amount} –≤–æ–ø—Ä–æ—Å–æ–≤, 1 –±–∞–ª–ª –∑–∞ –∫–∞–∂–¥—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.\n\n"
            "–°–∫–æ—Ä–æ –Ω–∞—á–Ω—ë–º! üß†‚ö°Ô∏è"
        )
        return _t('theme_selected_start', default, name=name, amount=amount)

    @staticmethod
    def canceled() -> str:
        return _t('canceled', '–ò–≥—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.')

    @staticmethod
    def stopped_quiz() -> str:
        return _t('stopped_quiz', 'üõë –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /quiz')

    @staticmethod
    def time_left_30() -> str:
        return _t('time_left_30', '‚ö†Ô∏è –û—Å—Ç–∞–ª–æ—Å—å 30 —Å–µ–∫—É–Ω–¥!')

    @staticmethod
    def time_left_10() -> str:
        return _t('time_left_10', '‚ö†Ô∏è –û—Å—Ç–∞–ª–æ—Å—å 10 —Å–µ–∫—É–Ω–¥!')

    @staticmethod
    def no_active_game() -> str:
        return _t('no_active_game', 'üõë –í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã.')

    @staticmethod
    def game_not_running() -> str:
        return _t('game_not_running', '–ò–≥—Ä–∞ –Ω–µ –∏–¥–µ—Ç!')

    @staticmethod
    def captain_only_can_answer(username: str) -> str:
        default = f"–û—Ç–≤–µ—á–∞—Ç—å –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∫–∞–ø–∏—Ç–∞–Ω –∫–æ–º–∞–Ω–¥—ã! (@{username})"
        return _t('captain_only_can_answer_with_username', default, username=username)

    @staticmethod
    def already_answered() -> str:
        return _t('already_answered', '–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å!')

    @staticmethod
    def only_registered_can_answer() -> str:
        return _t('only_registered_can_answer', '–¢–æ–ª—å–∫–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –º–æ–≥—É—Ç –æ—Ç–≤–µ—á–∞—Ç—å –≤ —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ. –ù–∞–∂–º–∏—Ç–µ ¬´–£—á–∞—Å—Ç–≤—É—é¬ª –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º.')

    @staticmethod
    def need_answer_text_after_command() -> str:
        return _t('need_answer_text_after_command', '–ù—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç–≤–µ—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏–º–µ—Ä: /otvet –≤–∞—à_–æ—Ç–≤–µ—Ç')

    @staticmethod
    def theme_selection_solo() -> str:
        return _t('theme_selection_solo', 'üìö –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã (—Ä–µ–∂–∏–º: ü§ñ –°–æ–ª–æ):')

    @staticmethod
    def get_start_message(captain: str):
        default = (
            "üëã –í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! \n\n"
            "–Ø ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –æ—Ç –ö–≤–∏–∑, –ø–ª–∏–∑! –≤ Telegram üí•\n"
            "–ú–æ–≥—É —É—Å—Ç—Ä–æ–∏—Ç—å –≤–∞–º —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ –º–µ–∂–¥—É —Å–æ–±–æ–π –∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å –≤–∞–º –≤–æ–ø—Ä–æ—Å—ã, –∫–∞–∫ –∫–æ–º–∞–Ω–¥–µ (–¥–∞, –≤—Å—ë –∫–∞–∫ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º –ö–≤–∏–∑, –ø–ª–∏–∑!)\n\n"
            "–ü—Ä–µ–∂–¥–µ —á–µ–º –º—ã –Ω–∞—á–Ω—ë–º ‚Äî –¥–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è!\n\n"
            "üìù {captain}, –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤–∞—à–µ–≥–æ —á–∞—Ç–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –∏ –ø–æ–≥–Ω–∞–ª–∏! üí•"
        )
        return _t('get_start_message', default, captain=captain)

    @staticmethod
    def solo_quiz_start_message():
        default = (
            "üéÆ –ü–æ–≥–Ω–∞–ª–∏! –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –∏–≥—Ä–∞—Ç—å:\n\n"
            "üèÜ –°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ ‚Äî –∫–∞–∂–¥—ã–π —Å–∞–º –∑–∞ —Å–µ–±—è! –ö—Ç–æ –Ω–∞–±–µ—Ä—ë—Ç –±–æ–ª—å—à–µ –≤—Å–µ—Ö –æ—á–∫–æ–≤, —Ç–æ—Ç –∏ —á–µ–º–ø–∏–æ–Ω üí™\n\n"
            "üë• –ö–æ–º–∞–Ω–¥–Ω—ã–π —Ä–µ–∂–∏–º ‚Äî –∫–≤–∏–∑ –¥–ª—è –≤—Å–µ–π –∫–æ–º–∞–Ω–¥—ã! –ö–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî –Ω–æ–≤–∞—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞: –æ–±—Å—É–∂–¥–∞–µ—Ç–µ –≤–º–µ—Å—Ç–µ, –æ—Ç–≤–µ—á–∞–µ—Ç–µ –≤–º–µ—Å—Ç–µ, –ø–æ–±–µ–∂–¥–∞–µ—Ç–µ –≤–º–µ—Å—Ç–µ!\n\n"
            "üëá –ñ–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∏ –≤–ø–µ—Ä—ë–¥ –∫ –∑–Ω–∞–Ω–∏—è–º! üß†‚ö°Ô∏è"
        )
        return _t('solo_quiz_start_message', default)


    @staticmethod
    def dm_quiz_start_message():
        default = (
            "üéØ –ú—ã –Ω–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É...\n\n"
            "–í–ø–µ—Ä–µ–¥–∏ –æ–¥–∏–Ω —Ä–∞—É–Ω–¥ –∏ —à–µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å–æ–≤! –ó–∞ –∫–∞–∂–¥—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ‚Äî +1 –±–∞–ª–ª –≤ –∫–æ–ø–∏–ª–∫—É.\n\n"
            "üëá –ò—Ç–∞–∫, —Ç–µ–º–∞ –¥–ª—è —Ä–∞—É–Ω–¥–∞:"
        )
        return _t('dm_quiz_start_message', default)

    @staticmethod
    def dm_quiz_after_start_message(question_amount: int):
        default = (
            "üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏—è \"–û–±–æ –≤—Å–µ–º\" ‚Äî –ø—Ä–∏–Ω—è–ª!\n"
            "–ë—É–¥–µ—Ç –∂–∞—Ä–∫–æ üî• ‚Äî {question_amount} –≤–æ–ø—Ä–æ—Å–æ–≤, 1 –±–∞–ª–ª –∑–∞ –∫–∞–∂–¥—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.\n\n"
            "–°–∫–æ—Ä–æ –Ω–∞—á–Ω—ë–º! üß†‚ö°Ô∏è"
        )
        return _t('dm_quiz_after_start_message', default, question_amount=question_amount)

    @staticmethod
    def dm_quiz_question_result_message(
        right_answer: str,
        not_answered: list[str],
        wrong_answers: list[str],
        right_answers: list[str],
        totals: dict[str, int] | None = None,
        comment: str | None = None,
    ) -> str:
        blocks = []
        if right_answers:
            def _fmt_right(name: str) -> str:
                if totals and name in totals:
                    return f"{name}: +1 –±–∞–ª–ª ({totals[name]})"
                return f"{name}: +1 –±–∞–ª–ª"
            rights = "\n".join([_fmt_right(name) for name in right_answers])
            blocks.append(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏:\n{rights}")
        if wrong_answers:
            def _fmt_wrong(name: str) -> str:
                if totals and name in totals:
                    return f"{name} ({totals[name]})"
                return name
            wrongs = "\n".join([_fmt_wrong(name) for name in wrong_answers])
            blocks.append(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏:\n{wrongs}")
        if not_answered:
            na = "\n".join(not_answered)
            blocks.append(f"‚è≥ –ù–µ —É—Å–ø–µ–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å:\n{na}")

        details = ("\n\n".join(blocks)) if blocks else ""
        comment_block = f"\n\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}" if comment else ""
        default = (
            "‚åõÔ∏è –í—Ä–µ–º—è –≤—ã—à–ª–æ!\n\n"
            "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {right_answer}{comment_block}\n\n"
            "üìä –û—Ç–≤–µ—Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:\n\n"
            "{details}"
        )
        return _t(
            'dm_quiz_question_result_message',
            default,
            right_answer=right_answer,
            details=details.rstrip(),
            comment_block=comment_block
        )

    @staticmethod
    def dm_quiz_question_template(text: str, timer: int, current_q_idx: int) -> str:
        default = (
            "–í–æ–ø—Ä–æ—Å ‚Ññ{current_q_idx}\n"
            "üß†  {text}\n\n"
            "‚è± –¢–ê–ô–ú–ï–†: {timer} —Å–µ–∫"
        )
        return _t('dm_quiz_question_template', default, text=text, timer=timer, current_q_idx=current_q_idx)

    @staticmethod
    def team_quiz_question_template(current_q_idx: int, username: str, text: str, timer: int) -> str:
        base = TextStatics.dm_quiz_question_template(text, timer, current_q_idx)
        default_suffix = (
            "\nüí° {username}, –æ—Ç–≤–µ—á–∞–π –∫–æ–º–∞–Ω–¥–∞–º–∏ /otvet –∏ /answer –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç—å –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            "üìù –£ –≤–∞—Å 2 –ø–æ–ø—ã—Ç–∫–∏"
        )
        return base + _t('team_quiz_question_suffix', default_suffix, username=username)

    @staticmethod
    def team_quiz_question_right_answer(username: str, xp: int) -> str:
        return _t('team_quiz_question_right_answer', 'üéâ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç {username}! +{xp} –±–∞–ª–ª–æ–≤ –≤—Å–µ–π –∫–æ–º–∞–Ω–¥–µ', username=username, xp=xp)

    @staticmethod
    def team_start_message(team_name: str, username: str) -> str:
        default = (
            "üéÆ –°—Ç–∞—Ä—Ç—É–µ–º! \"–ö–æ–º–∞–Ω–¥–Ω–∞—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ #01\" ‚Äî –ø–æ–µ—Ö–∞–ª–∏!\n\n"
            "üìù –ö–∞–∫ –∏–≥—Ä–∞—Ç—å:\n\n"
            "‚Ä¢ –û–±—Å—É–∂–¥–∞–µ—Ç–µ –≤–æ–ø—Ä–æ—Å –≤—Å–µ–π –∫–æ–º–∞–Ω–¥–æ–π\n\n"
            "‚Ä¢ –ö–∞–ø–∏—Ç–∞–Ω ({username}) —Å–¥–∞—ë—Ç –≤–∞—à –æ—Ç–≤–µ—Ç –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ–ø—Ä–æ—Å–æ–º –∏–ª–∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /otvet –≤–∞—à_–æ—Ç–≤–µ—Ç\n\n"
            "‚Ä¢ –ë–∞–ª–ª—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –≤—Å–µ–π –∫–æ–º–∞–Ω–¥–µ\n\n"
            "‚Ä¢ 2 –±–∞–ª–ª–∞ –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏ –∏ 1 –±–∞–ª–ª ‚Äî —Å–æ –≤—Ç–æ—Ä–æ–π\n\n"
            "–í—Ä–µ–º—è –ø–æ—à–ª–æ! ‚è≥ –£–¥–∞—á–∏, –∫–æ–º–∞–Ω–¥–∞! üß†üí™"
        )
        return _t('team_start_message', default, username=username, team_name=team_name)

    @staticmethod
    def team_prep_message(quiz_name: str, captain_username: str | None, seconds: int) -> str:
        captain = f"@{captain_username}" if captain_username and not captain_username.startswith('@') else (captain_username or '')
        default = (
            "üéÆ –°—Ç–∞—Ä—Ç—É–µ–º! \"{quiz_name}\" ‚Äî –ø–æ–µ—Ö–∞–ª–∏!\n\n"
            "üìù –ö–∞–∫ –∏–≥—Ä–∞—Ç—å:\n\n"
            "‚Ä¢ –û–±—Å—É–∂–¥–∞–µ—Ç–µ –≤–æ–ø—Ä–æ—Å –≤—Å–µ–π –∫–æ–º–∞–Ω–¥–æ–π\n\n"
            "‚Ä¢ –ö–∞–ø–∏—Ç–∞–Ω ({captain}) —Å–¥–∞—ë—Ç –≤–∞—à –æ—Ç–≤–µ—Ç –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ–ø—Ä–æ—Å–æ–º –∏–ª–∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /–æ—Ç–≤–µ—Ç –≤–∞—à_–æ—Ç–≤–µ—Ç\n\n"
            "‚Ä¢ –ë–∞–ª–ª—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –≤—Å–µ–π –∫–æ–º–∞–Ω–¥–µ\n\n"
            "‚Ä¢ 2 –±–∞–ª–ª–∞ –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏ –∏ 1 –±–∞–ª–ª ‚Äî —Å–æ –≤—Ç–æ—Ä–æ–π\n\n"
            "‚è≥ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞: {seconds} —Å–µ–∫"
        )
        return _t('team_prep_message', default, quiz_name=quiz_name, captain=captain, seconds=seconds)

    @staticmethod
    def team_prep_message_started(quiz_name: str, captain_username: str | None) -> str:
        captain = f"@{captain_username}" if captain_username and not captain_username.startswith('@') else (captain_username or '')
        default = (
            "üéÆ –°—Ç–∞—Ä—Ç—É–µ–º! \"{quiz_name}\" ‚Äî –ø–æ–µ—Ö–∞–ª–∏!\n\n"
            "üìù –ö–∞–∫ –∏–≥—Ä–∞—Ç—å:\n\n"
            "‚Ä¢ –û–±—Å—É–∂–¥–∞–µ—Ç–µ –≤–æ–ø—Ä–æ—Å –≤—Å–µ–π –∫–æ–º–∞–Ω–¥–æ–π\n\n"
            "‚Ä¢ –ö–∞–ø–∏—Ç–∞–Ω ({captain}) —Å–¥–∞—ë—Ç –≤–∞—à –æ—Ç–≤–µ—Ç –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ–ø—Ä–æ—Å–æ–º –∏–ª–∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /–æ—Ç–≤–µ—Ç –≤–∞—à_–æ—Ç–≤–µ—Ç\n\n"
            "‚Ä¢ –ë–∞–ª–ª—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –≤—Å–µ–π –∫–æ–º–∞–Ω–¥–µ\n\n"
            "‚Ä¢ 2 –±–∞–ª–ª–∞ –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏ –∏ 1 –±–∞–ª–ª ‚Äî —Å–æ –≤—Ç–æ—Ä–æ–π\n\n"
            "–í—Ä–µ–º—è –ø–æ—à–ª–æ! ‚è≥ –£–¥–∞—á–∏, –∫–æ–º–∞–Ω–¥–∞! üß†üí™"
        )
        return _t('team_prep_message_started', default, quiz_name=quiz_name, captain=captain)

    @staticmethod
    def team_quiz_question_wrong_answer(attempts_remaining: int, right_answer: str, comment: str | None = None) -> str:
        if attempts_remaining == 1:
            return _t('team_quiz_question_wrong_answer_1', '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!\n –æ—Å—Ç–∞–ª–∞—Å—å 1 –ø–æ–ø—ã—Ç–∫–∞')
        else:
            comment_block = f"\n\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}" if comment else ""
            return _t(
                'team_quiz_question_wrong_answer_0',
                '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç! –ü–æ–ø—ã—Ç–æ–∫ –±–æ–ª—å—à–µ –Ω–µ—Ç.\n‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {right_answer}{comment_block}\n\n–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É...',
                right_answer=right_answer,
                comment_block=comment_block
            )

    @staticmethod
    def get_registration_dm_message(usernames: list[str]) -> str:
        participants_text = ''

        for i, username in enumerate(usernames):
            participants_text += f"{i+1}. @{username}\n"
        
        default = (
            "üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∏–≥—Ä—É –æ—Ç–∫—Ä—ã—Ç–∞!\n\n"
            "üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏ ({count}):\n{participants}\n\n"
            "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.\n"
            "‚è≥ –£ —Ç–µ–±—è –µ—Å—Ç—å 60 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ –∏–≥—Ä—É! \n\n"
            "–ß–µ–º –±–æ–ª—å—à–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ‚Äî —Ç–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ –±–∞—Ç—Ç–ª! üéØ\n"
            "üëá –ñ–º–∏, –µ—Å–ª–∏ –≥–æ—Ç–æ–≤(–∞) —Å—Ä–∞–∂–∞—Ç—å—Å—è –∑–∞ –±–∞–ª–ª—ã –∏ —Å–ª–∞–≤—É! üß†‚ö°Ô∏è"
        )
        return _t('get_registration_dm_message', default, count=len(usernames) or 1, participants=participants_text)

    @staticmethod
    def format_question_text(index: int, text: str, time_limit: int) -> str:
        # –§–æ—Ä–º–∞—Ç –≤–æ–ø—Ä–æ—Å–∞ –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–∞—Ö JSON
        return TextStatics.dm_quiz_question_template(text, time_limit, index).strip()
    
    @staticmethod
    def get_solo_intro(name: str, amount: int) -> str:
        default = (
            "–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å–æ–ª–æ-–∏–≥—Ä—É ¬´{name}¬ª. –í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {amount}.\n"
            "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É."
        )
        return _t('get_solo_intro', default, name=name, amount=amount)

    @staticmethod
    def need_choose_city(team: str, captain: str) -> str:
        default = (
            "üìç {team} ‚Äî –æ—Ç–ª–∏—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ! –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏–º, –æ—Ç–∫—É–¥–∞ –≤—ã.\n\n"
            "–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –≤—ã –∏–≥—Ä–∞–µ—Ç–µ?\n"
            "{captain} –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ú–æ–∂–Ω–æ –±–µ–∑ —É—Ç–æ—á–Ω–µ–Ω–∏–π.\n\n"
            "–î–∞–∂–µ –µ—Å–ª–∏ –≤—ã –∏–≥—Ä–∞–µ—Ç–µ –æ–Ω–ª–∞–π–Ω ‚Äî –≤—Å—ë —Ä–∞–≤–Ω–æ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –≥–æ—Ä–æ–¥, —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∏ üèÜ"
        )
        return _t('need_choose_city', default, team=team, captain=captain)

    @staticmethod
    def city_not_found(captain: str) -> str:
        default = (
            "ü§î –ö–∞–∂–µ—Ç—Å—è, —è –Ω–µ –Ω–∞—à—ë–ª —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥ –≤ —Å–ø–∏—Å–∫–µ. –ú–æ–∂–µ—Ç, –±—ã–ª–∞ –æ–ø–µ—á–∞—Ç–∫–∞?\n\n"
            "{captain}, –ø–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å –µ—â—ë —Ä–∞–∑, –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –∏–ª–∏ –Ω–∞–∂–º–∏ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∫–∞–∑–∞—Ç—å –µ–≥–æ –ø–æ–∑–∂–µ.\n\n"
            "–ù–æ —Å –≥–æ—Ä–æ–¥–æ–º –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ ‚Äî –ø–æ–ø–∞–¥—ë—Ç–µ –≤ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∏! üèÜ"
        )
        return _t('city_not_found', default, captain=captain)


    @staticmethod
    def get_help_message() -> str:
        default = (
            "‚ÑπÔ∏è –ö–≤–∏–∑, –ø–ª–∏–∑! –ú–∏—Å—Ç–µ—Ä –ë–æ—Ç\n\n"
            "–ë–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—ã –∏–≥—Ä–∞–ª–∏ –≤ \"–ö–≤–∏–∑, –ø–ª–∏–∑!\" –ø—Ä—è–º–æ –≤ Telegram ‚Äî –±—ã—Å—Ç—Ä–æ, –≤–µ—Å–µ–ª–æ –∏ —Å –ø–æ–ª—å–∑–æ–π –¥–ª—è –º–æ–∑–≥–∞ üß†‚ö°\n\n"
            "üìå –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
            "üéÆ /quiz ‚Äî –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É\n\n"
            "üõë /stop ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É\n\n"
            "üìä /leaderboard ‚Äî —Ä–µ–π—Ç–∏–Ω–≥–∏ –∏–≥—Ä–æ–∫–æ–≤ –∏ –∫–æ–º–∞–Ω–¥—ã\n\n"
            "‚ùì /help ‚Äî —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
            "üß† –ö–∞–∫ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:\n\n"
            "–í —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ 1-1 —Å –±–æ—Ç–æ–º ‚Äî –∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫–∏ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏\n\n"
            "–í –∫–æ–º–∞–Ω–¥–Ω–æ–º —Ä–µ–∂–∏–º–µ ‚Äî –æ—Ç–≤–µ—á–∞—è –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ–ø—Ä–æ—Å–æ–º\n\n"
            "‚ú® –ö–∞–∫ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è XP:\n\n"
            "–°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ –∏–ª–∏ 1-1 —Å –±–æ—Ç–æ–º ‚Äî 10 –æ—á–∫–æ–≤ –∫–∞–∂–¥–æ–º—É –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç\n\n"
            "–ö–æ–º–∞–Ω–¥–Ω—ã–π —Ä–µ–∂–∏–º ‚Äî 2 –±–∞–ª–ª–∞ –∫–æ–º–∞–Ω–¥–µ –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –ø–µ—Ä–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏ –∏ 1 –±–∞–ª–ª - —Å–æ –≤—Ç–æ—Ä–æ–π\n\n"
            "–ë–æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è ‚Äî –∑–æ–≤–∏—Ç–µ –¥—Ä—É–∑–µ–π, –∏–≥—Ä–∞–π—Ç–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ –ø—Ä–æ–∫–∞—á–∏–≤–∞–π—Ç–µ—Å—å –≤–º–µ—Å—Ç–µ! üöÄ"
        )
        return _t('get_help_message', default)

    @staticmethod
    def question_transition_delay() -> str:
        default = (
            "‚è±Ô∏è –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å –ø–æ—è–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã"
        )
        return _t('question_transition_delay', default)
